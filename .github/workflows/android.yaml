name: Release APKs

on:
  push:
    tags:
      - 'v*' # Trigger the workflow when a new tag is pushed matching the pattern 'v*'

jobs:
  release:
    name: Release APK
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v1

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze Code
        run: flutter analyze

      - name: Run Tests
        run: flutter test

      - name: Build APKs
        run: flutter build apk --split-per-abi --release

      - name: Generating Changelog
        id: generate_changelog
        run: |
          PREVIOUS_TAG=$(git describe --abbrev=0 --tags "$(git rev-list --tags --skip=1 --max-count=1)")
          git log --pretty=format:"- %s" $PREVIOUS_TAG..HEAD > changelog.txt
                
          # Extract entries with "Added" or "Add" prefix
          cat changelog.txt | grep -Ei '^\-\s(Add|Added):' | sed 's/^\-\s(Add|Added)://g' > changelog_features.txt
                
          # Extract entries with other prefixes
          cat changelog.txt | grep -Eiv '^\-\s(Add|Added):' > changelog_fixes.txt
          
          echo "CHANGELOG_FEATURES<<$EOF" >> "$GITHUB_ENV"
          cat changelog_features.txt >> "$GITHUB_ENV"
          echo "$EOF" >> "$GITHUB_ENV"
          echo "CHANGELOG_FIXES<<$EOF" >> "$GITHUB_ENV"
          cat changelog_fixes.txt >> "$GITHUB_ENV"
          echo "$EOF" >> "$GITHUB_ENV"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: |
            # What's new
            ## Features
            ${{ env.CHANGELOG_FEATURES }}
            ## Fixes
            ${{ env.CHANGELOG_FIXES }}

      - name: Upload armeabi-v7a APK
        id: upload_armeabi
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
          asset_name: channeler_armeabi-v7a-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload arm64-v8a APK
        id: upload_arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
          asset_name: channeler_arm64-v8a-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload x86_64 APK
        id: upload_x86_64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/app/outputs/flutter-apk/app-x86_64-release.apk
          asset_name: channeler_x86_64-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive
